{"version":3,"sources":["components/Header.js","components/Footer.js","components/Loadding.js","App.js","serviceWorker.js","index.js","models/index.js","stores/user.js","stores/History.js","stores/image.js","stores/auth.js","stores/index.js","logo.svg"],"names":["Header","styled","header","Logo","img","StyleLink","NavLink","StyleButton","Button","Login","div","Component","observer","useStores","userStore","authStore","history","useHistory","src","LogoUrl","alt","activeClassName","to","exact","currentUser","attributes","username","type","onClick","logOut","push","Footer","footer","Loadding","Home","lazy","History","About","Register","App","fallback","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","AV","init","appId","appKey","serverURL","Auth","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","logIn","current","Uploader","file","filename","item","Object","avFile","File","set","save","serverFile","page","limit","query","Query","include","skip","descending","equalTo","find","results","this","observable","action","newList","list","concat","isLoadding","append","length","hasMore","finally","newFilename","newFile","isUploading","err","log","isLogin","values","pullUser","resetUser","historyStore","reset","imageStore","storeContext","createContext","stores","useContext","module","exports"],"mappings":"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","file":"static/js/main.8f87f6b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport LogoUrl from '../logo.svg';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport {useStores} from '../stores';\r\nimport {observer} from 'mobx-react';  // 监控组件中使用的 store 中的数据变动\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Header = styled.header`\r\ndisplay:flex;\r\nalign-items:center;\r\nbackground-color: #02101f;\r\npadding:10px 100px;\r\ncolor:#fff;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n    height:30px;\r\n`;\r\nconst StyleLink = styled(NavLink)`\r\n    color:#fff;\r\n    margin-left:30px;\r\n\r\n\r\n    // 给自己加 & 相当于自己，给每个navLink 加\r\n    &.active{\r\n        border-bottom:1px solid #fff;\r\n    }\r\n`;\r\n\r\nconst StyleButton = styled(Button)`\r\n    margin-left:10px;\r\n`;\r\nconst Login = styled.div`\r\n     margin-left:auto;\r\n`;\r\n\r\nconst Component = observer(()=>{\r\n    const {userStore,authStore} = useStores();\r\n    const history = useHistory();\r\n    // 点击header 登录按钮，跳转到登录页面\r\n    const handleLoginBtn= ()=>{\r\n        //跳转页面\r\n        history.push('/login');\r\n    } \r\n\r\n    // 点击 header 注册按钮，跳转到注册页面\r\n    const handleRegisterBtn = ()=>{\r\n        history.push('/register')\r\n    }\r\n    // 注销\r\n    const handleLogOut = ()=>{\r\n        authStore.logOut();\r\n    }\r\n    \r\n    return (\r\n        <Header>\r\n           <Logo src={LogoUrl} alt=\"logo\"/>\r\n           <nav>\r\n           <StyleLink activeClassName=\"active\" to=\"/\" exact>首页</StyleLink>\r\n           <StyleLink activeClassName=\"active\" to=\"/history\" >历史</StyleLink>\r\n           <StyleLink activeClassName=\"active\" to=\"/about\" >关于</StyleLink>\r\n           </nav>\r\n          <Login>\r\n              {\r\n                  userStore.currentUser ? <>\r\n                    {userStore.currentUser.attributes.username} <StyleButton type=\"primary\" onClick={()=> handleLogOut()}>注销</StyleButton>\r\n                  </> : <>\r\n                  <StyleButton type=\"primary\" onClick={()=> handleLoginBtn()} >登录</StyleButton>\r\n                  <StyleButton type=\"primary\" onClick={()=> handleRegisterBtn()} >注册</StyleButton>\r\n                  </>\r\n              }\r\n         \r\n           \r\n          </Login>\r\n        </Header>\r\n    )\r\n})\r\n\r\nexport default Component;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Footer = styled.footer`\r\n    padding:10px 100px;\r\n    text-align:center;\r\n    font-size:12px;\r\n    color:#aaa;\r\n`;\r\n\r\nfunction Component(){\r\n    return (\r\n        <Footer>\r\n            <h1>Footer</h1>\r\n        </Footer>\r\n    )\r\n}\r\n\r\nexport default Component;","import React from 'react';\r\n\r\nfunction Loadding(){\r\n    return (\r\n        <div>Loadding</div>\r\n    )\r\n}\r\n\r\nexport default Loadding;","import React, { Suspense, lazy } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Loadding from './components/Loadding';\nimport 'antd/dist/antd.css';  //antd css\n\n\n// import Home from './pages/Home';\n// import History from './pages/History';\n// import About from './pages/About';\nconst Home = lazy(() => import('./pages/Home'));\nconst History = lazy(() => import('./pages/History'));\nconst About = lazy(() => import('./pages/About'));\n// 竟然还不能这么写\n// const Loadding = lazy(()=> import('./components/Loadding'));\n\nconst Login = lazy(() => import('./pages/Login'));\nconst Register = lazy(() => import('./pages/Register'));\n\nfunction App() {\n  return (\n    <>\n      <Header />\n        <Switch>\n         <main>\n         <Suspense fallback={<Loadding />}>\n            <Route path=\"/\" exact><Home /></Route>\n            <Route path=\"/history\" component={History} />\n            <Route path=\"/about\" component={About}></Route>\n            <Route path=\"/login\" component={Login}></Route>\n            <Route path=\"/register\" component={Register}></Route>\n          </Suspense>\n         </main>\n        </Switch>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// 存放一些请求数据\r\n import AV,{ Query, User } from 'leancloud-storage';\r\nimport resolve from 'resolve';\r\n\r\n AV.init({\r\n    appId: \"TfCR5MV0xL388sGuQA7XBDSK-gzGzoHsz\",\r\n    appKey: \"voR91aKAmhzQP03CzPHr4d9C\",\r\n    serverURL: \"https://tfcr5mv0.lc-cn-n1-shared.com\"\r\n  });\r\n\r\n  // 创建一个认证对象，里面包含注册登录等方法\r\n  const Auth = {\r\n      register(username,password){\r\n          let user = new User();\r\n          user.setUsername(username);\r\n          user.setPassword(password);\r\n          return new Promise((resolve,reject)=>{\r\n            // user.signUp().then(\r\n            //     (loginuser)=>{\r\n            //         console.log('注册成功!');\r\n            //         resolve(loginuser);\r\n            //     },(error)=>{\r\n            //         console.log('注册失败!')\r\n            //         reject(error)\r\n            //     }\r\n            // )\r\n            user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error))\r\n          })\r\n    },\r\n    //登录\r\n    login(username,password){\r\n        return new Promise((resolve,reject)=>{\r\n            // User.logIn(username,).then((user)=>{\r\n            //     resolve('登录成功'+{user})\r\n            // },(error)=>{\r\n            //     reject(error);\r\n            // })\r\n            User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error));\r\n        })\r\n    },\r\n    // 注销\r\n    logOut(){\r\n        User.logOut();\r\n    },\r\n\r\n    // AV 提供的\r\n    getCurrentUser(){\r\n        return User.current();\r\n    }\r\n  }\r\n\r\n  // 上传文件对象，并添加 add 上传方法\r\n  const Uploader = {\r\n      add(file,filename){\r\n        const item = new AV.Object('Image');\r\n        const avFile = new AV.File(filename, file);\r\n        item.set('file',avFile); // avFile 保存后会生成一个指向它的 url\r\n        item.set('filename',filename);\r\n        item.set('owner',AV.User.current());\r\n        return new Promise((resolve,reject)=>{\r\n            item.save().then(serverFile=> resolve(serverFile),error=> reject(error));\r\n        })\r\n      } ,\r\n      // 查询上传历史,并支持分页 每10条信息一页\r\n      find({page=1,limit=10}){\r\n          // 查询 Image 表中的内容\r\n        const query = new AV.Query('Image');\r\n        query.include('owner');  // 查询包含的字段\r\n        query.limit(limit); //一次查询10条信息\r\n        query.skip((page-1)*limit); // 跳过的条数,其实page可以从1开始\r\n        query.descending('createdAt'); // leanCloud 自动加的字段\r\n        query.equalTo('owner',AV.User.current()); // 只查询当前用户的上传记录\r\n        return new Promise((resolve,reject)=>{\r\n            query.find()\r\n            .then(results=> resolve(results))\r\n            .catch(error=> reject(error))\r\n        })\r\n      }\r\n  }\r\n\r\n  export {Auth,Uploader};\r\n","import {observable,action} from 'mobx';\r\nimport {Auth} from '../models';\r\n\r\nclass UserStore{\r\n    @observable currentUser = null;\r\n\r\n    @action pullUser(){\r\n        this.currentUser = Auth.getCurrentUser();\r\n    }\r\n\r\n    @action resetUser(){\r\n        this.currentUser = null;\r\n    }\r\n}\r\n\r\nexport default new UserStore;","import {observable,action} from 'mobx';\r\nimport {Uploader} from '../models';\r\nimport {message} from 'antd';\r\n\r\nclass HistoryStore{\r\n    //写了这么多，总结一下 store 中的监控变量的规律\r\n    //一般监控 action 中传递的参数,然后对这些参数,添加 set get 方法\r\n    //还有一些 ui层需要用到的判断逻辑变量，例如 loadding 等\r\n    @observable page=1;\r\n    @observable limit = 10;  // limit 可以更改，默认为10条吧\r\n    @observable isLoadding = false;\r\n    @observable list = []; //用来存放返回结果\r\n    @observable hasMore = true;  // 是否还有更多数据\r\n\r\n   \r\n    // 将新请求的数据 concat 到原来的数据上\r\n    @action append(newList){\r\n        this.list = this.list.concat(newList);\r\n    }\r\n\r\n    @action find(){\r\n        this.isLoadding = true;\r\n        Uploader.find({page:this.page,limit:this.limit})\r\n        .then(newList=>{\r\n            this.append(newList);\r\n            this.page++;  // 请求成功后页码++\r\n            // 判断是否还有更多数据,如果请求回来的条数小于limit 则还有\r\n            if(newList.length < this.limit){\r\n                this.hasMore = false;\r\n            }\r\n        }).catch(error=>{\r\n            message.error('加载数据失败')\r\n        }).finally(()=>{\r\n            this.isLoadding = false;\r\n        })\r\n    }\r\n\r\n\r\n    @action reset(){\r\n        // 或者卸载组件时 清空列表\r\n        this.list = [];\r\n        this.isLoadding = false;\r\n        this.hasMore = true; // 恢复默认\r\n        this.page = 0;\r\n    }\r\n}\r\n\r\nexport default new HistoryStore();","import {observable,action} from 'mobx';\r\nimport {Uploader} from '../models';\r\n\r\nclass ImageStore{\r\n    @observable filename=\"\";\r\n    @observable file = null;\r\n    @observable isUploading=false;\r\n    @observable serverFile = null;\r\n\r\n\r\n    //设置文件名称\r\n    @action setFilename(newFilename){\r\n        this.filename = newFilename;\r\n    }\r\n\r\n    //设置文件对象\r\n    @action setFile(newFile){\r\n        this.file = newFile;\r\n    }\r\n\r\n    @action upload(){\r\n        this.isUploading = true;\r\n        // 使用 promise 封装\r\n        return new Promise((resolve,reject)=>{\r\n            Uploader.add(this.file,this.filename)\r\n            .then(serverFile=>{\r\n                // 将服务器返回的文件对象赋值给 serverFile\r\n                this.serverFile = serverFile;\r\n                resolve(serverFile);\r\n            }).catch(err=>{\r\n                console.log('上传失败');\r\n                reject(err);\r\n            }).finally(()=>{\r\n                this.isUploading = false;\r\n            })\r\n        })\r\n    }\r\n\r\n    @action reset(){\r\n        this.isUploading =false;\r\n        this.serverFile=null;\r\n    }\r\n}\r\n\r\nexport default new ImageStore();","import { observable, action } from 'mobx';\r\nimport { Auth } from '../models';\r\nimport userStore from './user';\r\nimport historyStore from './History';\r\nimport imageStore from './image';\r\n\r\n\r\nclass AuthStore {\r\n    @observable isLogin = false;\r\n    @observable isLoadding = false;\r\n    @observable values = {\r\n        username: 'Tingting',\r\n        password: ''\r\n    };\r\n\r\n    @action setIsLogin(isLogin) {\r\n        this.isLogin = isLogin;\r\n    }\r\n\r\n    @action setPassword(password) {\r\n        this.values.password = password\r\n    }\r\n\r\n    @action setUsername(username) {\r\n        this.values.username = username\r\n    }\r\n\r\n    // 之所以不在 model 里面写这些逻辑，是因为想把 model 单独当成一个 获取数据的模型，不污染它里面的内容\r\n\r\n\r\n    @action login() {\r\n        return new Promise((resolve, reject) => {\r\n            Auth.login(this.values.username, this.values.password).then((user) => {\r\n                console.log('登录成功');\r\n                // 登录成功设置 userStore user 信息\r\n                userStore.pullUser();\r\n                resolve(user);\r\n            }).catch((error) => {\r\n                console.log('登录失败')\r\n                reject(error);\r\n            })\r\n        })\r\n      }\r\n\r\n    @action register() {\r\n        // console.log(\"=====\"+this.values.username)\r\n        // console.log(\"----\"+this.values.password)\r\n        //当用户调用register 方法时，调用models里面的接口\r\n        return new Promise((resolve, reject) => {\r\n            Auth.register(this.values.username, this.values.password).then((user) => {\r\n                console.log('注册成功')\r\n                //注册成功为什么要 setUser  里面将 获取model 中的user, 赋值给 userStore 里面的 user;\r\n                // 一旦登录成功，model 中的 currentUser就会有值，这是 AV 提供的\r\n                userStore.pullUser();\r\n                resolve(user);\r\n            }).catch((error) => {\r\n                console.log('注册失败')\r\n                //重置 user\r\n                userStore.resetUser();\r\n                reject(error);\r\n            })\r\n        })\r\n    }\r\n\r\n    @action logOut() {\r\n        Auth.logOut();\r\n        // 用户注销时清空一切数据\r\n        userStore.resetUser();\r\n        historyStore.reset();\r\n        imageStore.reset();\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default new AuthStore();","import React, {createContext,useContext} from 'react';\r\nimport authStore from './auth';\r\nimport userStore from './user';\r\nimport imageStore from './image';\r\nimport historyStore from './History';\r\n\r\nconst storeContext = createContext({\r\n    authStore,\r\n    userStore,\r\n    imageStore,\r\n    historyStore\r\n});\r\n\r\n//方便在控制台测试，查看 stores 中的内容\r\nwindow.stores = {\r\n    authStore,\r\n    userStore,\r\n    imageStore,\r\n    historyStore\r\n};\r\n\r\n\r\nconst useStores = ()=> useContext(storeContext);\r\n\r\nexport  {useStores};\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}