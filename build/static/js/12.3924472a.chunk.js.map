{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Component","authStore","useStores","history","useHistory","name","initialValues","remember","onFinish","values","setUsername","username","setPassword","password","register","then","user","console","log","push","catch","error","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","type","htmlType"],"mappings":"ieAOA,IAAMA,EAAUC,IAAOC,IAAV,KAQPC,EAAQF,IAAOG,GAAV,KAKLC,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,EAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KA4FlBI,UAzFG,WAAO,IAChBC,EAAaC,cAAbD,UACDE,EAAUC,cAoChB,OACE,kBAACf,EAAD,KACE,kBAACG,EAAD,qBACA,kBAAC,IAAD,iBACME,EADN,CAEEW,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SAzCW,SAAAC,GAEfR,EAAUS,YAAYD,EAAOE,UAC7BV,EAAUW,YAAYH,EAAOI,UAE7BZ,EAAUa,WAAWC,MAAK,SAACC,GACzBC,QAAQC,IAAI,sEAEZf,EAAQgB,KAAK,QACZC,OAAM,SAACC,GACRJ,QAAQC,IAAIG,OAgCVC,eA5BiB,SAAAC,GACrBN,QAAQC,IAAI,UAAWK,MA6BnB,kBAAC,IAAKC,KAAN,CACEC,MAAM,qBACNpB,KAAK,WACLqB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,wCAAW,CAC5CC,UA7Be,SAACC,EAAKC,GAE7B,MAAG,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,4CACzDD,QAAQG,cA4BT,kBAAC,IAAD,OAGF,kBAAC,IAAKZ,KAAN,CACEC,MAAM,eACNpB,KAAK,WACLqB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,kCAAU,CAC3CS,IAAI,EACJT,QAAQ,mCACR,CACAU,IAAI,GACJV,QAAQ,sCAGV,kBAAC,IAAMW,SAAP,OAGF,kBAAC,IAAKf,KAAN,CACEC,MAAM,2BACNpB,KAAK,kBACLqB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,8CA5CnB,SAAC,GAAD,IAAEY,EAAF,EAAEA,cAAF,MAAqB,CAC3CX,UAD2C,SACjCC,EAAKC,GACb,OAAGS,EAAc,cAAgBT,EAAcE,QAAQG,UAChDH,QAAQC,OAAO,mDA2ClB,kBAAC,IAAMK,SAAP,OAGF,kBAAC,IAAKf,KAAS1B,EACb,kBAAC,IAAD,CAAQ2C,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/12.3924472a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport {useStores} from '../stores';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst Wrapper = styled.div`\r\nmax-width:600px;\r\nmargin:30px auto;\r\nborder:1px solid #ccc;\r\nbox-shadow:2px 2px 4px 0 rgba(0,0,0.2);\r\nborder-radies:4px;\r\npadding:20px;\r\n`;\r\nconst Title = styled.h1`\r\ntext-align:center;  \r\n`;\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 6, span: 18 },\r\n};\r\n\r\nconst Component = () => {\r\n  const {authStore} = useStores();\r\n  const history = useHistory();\r\n  //点击提交会执行 onFinish 方法\r\n  const onFinish = values => {\r\n    //先给 store 里面的注册需要的属性赋值\r\n    authStore.setUsername(values.username);\r\n    authStore.setPassword(values.password);\r\n    //调用 store 里的注册方法\r\n    authStore.register().then((user)=>{\r\n      console.log('注册成功，跳转到登录页');\r\n      //先跳到首页吧,store里面注册成功后在 userStore 里设置了\r\n      history.push('/');\r\n    }).catch((error)=>{\r\n      console.log(error)\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  // 给 rule 里面的 validator 指定一个函数\r\n  const validateUsername = (rule,value) =>{\r\n    //如果不是字母数字下划线 提醒\r\n    if(/\\W/.test(value)) return Promise.reject('只能是字母数字下划线');\r\n    if(value.length < 4 || value.length > 10) return Promise.reject('长度为4-10个字符');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  //直接在 rule 里面写一个函数\r\n  const validateConfirm = ({getFieldValue}) =>({\r\n    validator(rule,value){\r\n      if(getFieldValue('password') === value) return Promise.resolve();\r\n      return Promise.reject('两次密码不一致')\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>注册</Title>\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"用户名\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: \"请输入用户名\" },{\r\n            validator: validateUsername\r\n          }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: '请输入密码' },{\r\n            min:4,\r\n            message:'最少4个字符'\r\n          },{\r\n            max:10,\r\n            message:'最大10个字符'\r\n          }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"确认密码\"\r\n          name=\"confirmPassword\"\r\n          rules={[{ required: true, message: '请再次输入密码' },validateConfirm]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            提交\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Component;"],"sourceRoot":""}