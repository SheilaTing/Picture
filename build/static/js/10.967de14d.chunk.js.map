{"version":3,"sources":["components/Tips.js","components/Uploader.js","pages/Home.js"],"names":["Tips","styled","div","Component","observer","children","userStore","useStores","currentUser","Result","H1","h1","Image","img","Dragger","Upload","imageStore","ref1","useRef","ref2","store","useLocalStore","width","setWidth","this","height","setHeight","serverFile","attributes","file","url","widthStr","heightStr","props","showUploadList","beforeUpload","setFile","setFilename","name","message","warning","upload","then","serverfile","console","log","catch","className","InboxOutlined","target","href","filename","src","ref","onChange","current","value","placeholder","fullStr","Home","Uploader"],"mappings":"0UAOA,IAAMA,EAAOC,IAAOC,IAAV,KAuBKC,EAXGC,aAAS,YAAe,IAAbC,EAAY,EAAZA,SAClBC,EAAaC,cAAbD,UACP,OACI,oCAEQA,EAAUE,YAAc,KAAO,kBAACR,EAAD,KAAOK,O,qYCftD,IAAMI,EAASR,IAAOC,IAAV,KAMNQ,EAAKT,IAAOU,GAAV,KAKFC,EAAQX,IAAOY,IAAV,KAKHC,EAAYC,IAAZD,QAgHOX,EA7GGC,aAAS,WAAO,IAAD,EACKG,cAA1BD,EADqB,EACrBA,UAAWU,EADU,EACVA,WAEbC,EAAOC,mBACPC,EAAOD,mBAGPE,EAAQC,aAAc,iBAAO,CAC/BC,MAAO,KACPC,SAF+B,SAEtBD,GACLE,KAAKF,MAAQA,GAEjB,eACI,OAAOE,KAAKF,MAAL,aAAmBE,KAAKF,OAAU,IAE7CG,OAAQ,KACRC,UAT+B,SASrBD,GACND,KAAKC,OAASA,GAElB,gBACI,OAAOD,KAAKC,OAAL,aAAoBD,KAAKC,QAAW,IAE/C,cACI,OAAOT,EAAWW,WAAWC,WAAWC,KAAKD,WAAWE,IAAM,gBAAkBV,EAAMW,SAAWX,EAAMY,eAczGC,EAAQ,CACVC,gBAAgB,EAChBC,aAAc,SAAAN,GAIV,OAFAb,EAAWoB,QAAQP,GACnBb,EAAWqB,YAAYR,EAAKS,MACC,MAAzBhC,EAAUE,aACV+B,IAAQC,QAAQ,+CACT,IAEXxB,EAAWyB,SACNC,MAAK,SAACC,GACHC,QAAQC,IAAI,4BACZD,QAAQC,IAAIF,MACbG,OAAM,WACLF,QAAQC,IAAI,gCAIb,KAIf,OACI,6BACI,kBAAC/B,EAAYmB,EACT,uBAAGc,UAAU,wBACT,kBAACC,EAAA,EAAD,OAEJ,uBAAGD,UAAU,mBAAb,6CACA,uBAAGA,UAAU,mBAAb,2GAQA/B,EAAWW,WAAa,kBAAClB,EAAD,KACpB,kBAACC,EAAD,iCACA,4BACI,wDACA,4BACI,uBAAGuC,OAAO,SAASC,KAAMlC,EAAWW,WAAWC,WAAWC,KAAKD,WAAWE,KACrEd,EAAWW,WAAWC,WAAWC,KAAKD,WAAWE,MAG1D,kDACA,4BAAKd,EAAWmC,UAChB,wDACA,4BACI,kBAACvC,EAAD,CAAOwC,IAAKpC,EAAWW,WAAWC,WAAWC,KAAKD,WAAWE,OAEjE,wDACA,4BACI,2BAAOuB,IAAKpC,EAAMqC,SAhElB,WAEpBlC,EAAMG,SAASN,EAAKsC,QAAQC,QA8DqCC,YAAY,6BACzD,2BAAOJ,IAAKlC,EAAMmC,SA5DjB,WACrBlC,EAAMM,UAAUP,EAAKoC,QAAQC,QA2DqCC,YAAY,8BAG9D,4BACI,uBAAGR,OAAO,SAASC,KAAM9B,EAAMsC,SAAUtC,EAAMsC,YAG/C,SC1HtBC,EAAOvD,aAAS,WAGlB,OACI,oCACG,kBAAC,EAAD,qEACA,kBAACwD,EAAD,UAKID","file":"static/js/10.967de14d.chunk.js","sourcesContent":["import React from 'react';\nimport {useStores} from '../stores';\nimport styled from 'styled-components';\nimport {observer} from 'mobx-react';\n\n\n// 给 div 加样式\nconst Tips = styled.div`\n    padding:10px;\n    margin:30px 0;\n    color:#fff;\n    border-radius:5px;\n    background: orange;\n`;\n\n\n// {children} 可以获取到该组件中间的子元素\n// <component>{children}</component>\n//该组件中，我们判断用户是否登录,如果未登录给出提示\nconst Component = observer(({children})=>{\n    const {userStore} = useStores();\n    return (\n        <>\n            {\n                userStore.currentUser ? null : <Tips>{children}</Tips>\n            }\n        </>\n    )\n})\n\nexport default Component;","import React,{useRef} from 'react';\nimport { observer, useLocalStore } from 'mobx-react';\nimport { useStores } from '../stores';\nimport { Upload, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\n//样式\n// 整个显示结果的容器样式\nconst Result = styled.div`\n    margin-top:30px;\n    border:1px dashed #cccResult;\n    padding:20px;\n`;\n//标题样式\nconst H1 = styled.h1`\n    text-align:center;\n    margin:20px 0;\n`;\n// 图片预览样式\nconst Image = styled.img`\n    max-width:300px;\n`;\n\n\nconst { Dragger } = Upload;\n\n//该组件实现上传图片ui,并根据用户是否登录做处理\nconst Component = observer(() => {\n    const { userStore, imageStore } = useStores();\n    //获取 input 输入的宽高\n    const ref1 = useRef();\n    const ref2 = useRef();\n    // 组件内部构建并使用 store\n    // 目的是 当设置宽高的input 内容发生变化时执行一个action 方法改变图片的url\n    const store = useLocalStore(() => ({\n        width: null,\n        setWidth(width) {\n            this.width = width;\n        },\n        get widthStr() {\n            return this.width ? `/w/${this.width}` : '';\n        },\n        height: null,\n        setHeight(height) {\n            this.height = height;\n        },\n        get heightStr() {\n            return this.height ? `/h/${this.height}` : '';\n        },\n        get fullStr() {\n            return imageStore.serverFile.attributes.file.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr;\n        }\n\n    }));\n\n    const bindWidthChange = ()=>{\n        // 设置 store 中的 宽度\n        store.setWidth(ref1.current.value);\n    };\n\n    const bindHeightChange = ()=>{\n        store.setHeight(ref2.current.value);\n    }\n\n    const props = {\n        showUploadList: false,  // 隐藏上传后的文件列表\n        beforeUpload: file => {\n            //调用 imageStore 中的上传方法\n            imageStore.setFile(file);\n            imageStore.setFilename(file.name);\n            if (userStore.currentUser == null) {\n                message.warning('请先登录再上传');\n                return false;\n            }\n            imageStore.upload()\n                .then((serverfile) => {\n                    console.log('上传成功');\n                    console.log(serverfile)\n                }).catch(() => {\n                    console.log('上传失败')\n                })\n            //return false 就不会自动上传,\n            //然后我们在该方法中定义我们自己的逻辑;\n            return false;\n        },\n    };\n\n    return (\n        <div>\n            <Dragger {...props}>\n                <p className=\"ant-upload-drag-icon\">\n                    <InboxOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                <p className=\"ant-upload-hint\">\n                    Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n                    band files\n                </p>\n            </Dragger>\n\n            {/* 根据imageStore 中是否有 serverFile 来展示上传结果 */}\n            {\n                imageStore.serverFile ? <Result>\n                    <H1>上传结果</H1>\n                    <dl>\n                        <dt>线上地址</dt>\n                        <dd>\n                            <a target=\"_blank\" href={imageStore.serverFile.attributes.file.attributes.url}>\n                                {imageStore.serverFile.attributes.file.attributes.url}\n                            </a>\n                        </dd>\n                        <dt>文件名</dt>\n                        <dd>{imageStore.filename}</dd>\n                        <dt>图片预览</dt>\n                        <dd>\n                            <Image src={imageStore.serverFile.attributes.file.attributes.url}></Image>\n                        </dd>\n                        <dt>更多尺寸</dt>\n                        <dd>\n                            <input ref={ref1} onChange={bindWidthChange} placeholder=\"图片宽度\" />\n                            <input ref={ref2} onChange={bindHeightChange} placeholder=\"图片高度\" />\n                        </dd>\n                        {/* 加上宽高后的完整路径 */}\n                        <dd>\n                            <a target=\"_blank\" href={store.fullStr}>{store.fullStr}</a>\n                        </dd>\n                    </dl>\n                </Result> : null\n            }\n\n\n        </div>\n    )\n})\n\n\nexport default Component;","import React from 'react';\nimport {useStores} from '../stores';\nimport {observer} from 'mobx-react';\nimport Tips from '../components/Tips';\nimport Uploader from '../components/Uploader';\n\nconst Home = observer(()=>{\n\n\n    return(\n        <>\n           <Tips>请先登录再上传！！！</Tips>\n           <Uploader /> \n        </>\n    )\n})\n\nexport default Home;"],"sourceRoot":""}